generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// TODO: added leaflet specific data areas to store the actual position data
model User {
  id              Int               @id @default(autoincrement())
  email           String            @unique
  password        String?
  name            String
  tokens          String[]
  buildings       BuildingEditors[]
  isEmailVerified Boolean
}

model Floor {
  id          Int      @id @default(autoincrement())
  areas       Area[]
  title       String
  description String
  building    Building @relation(fields: [buildingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  buildingId  Int
  shape       String?
}

model Building {
  id          Int               @id @default(autoincrement())
  title       String
  address     String
  startLat    Float
  startLon    Float
  floors      Floor[]
  editors     BuildingEditors[]
}

model Area {
  id          Int     @id @default(autoincrement())
  title       String
  description String
  shape       String
  traversable Boolean
  category    String
  floor       Floor   @relation(fields: [floorId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  floorId     Int
}

enum EditorLevel {
  viewer
  editor
  owner
}

// Join table used to connect buildings and users
model BuildingEditors {
  id          Int         @id @default(autoincrement())
  user        User        @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId      Int
  building    Building    @relation(fields: [buildingId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  buildingId  Int
  editorLevel EditorLevel
  timestamp   DateTime    @default(now())
}
