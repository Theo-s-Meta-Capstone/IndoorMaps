# -----------------------------------------------
# !!! THIS FILE WAS GENERATED BY TYPE-GRAPHQL !!!
# !!!   DO NOT MODIFY THIS FILE BY YOURSELF   !!!
# -----------------------------------------------

type Building {
  address: String!
  databaseId: Int!
  floors: [Floor!]!
  id: ID!
  startPos: LatLng!
  title: String!
}

input BuildingCreateInput {
  address: String!
  startLat: Float!
  startLon: Float!
  title: String!
}

input BuildingUniqueInput {
  id: Float
}

type BuildingWithPerms {
  building: Building!
  editorLevel: EditorLevel!
  id: ID!
}

enum EditorLevel {
  editor
  owner
  viewer
}

type Floor {
  databaseId: Int!
  description: String!
  id: ID!
  shape: String
  title: String!
}

input FloorCreateInput {
  buildingDatabseId: Int!
  description: String!
  title: String!
}

type LatLng {
  lat: Float!
  lon: Float!
}

type LogedInUser {
  id: ID!
  isLogedIn: Boolean!
  user: User
}

type Mutation {
  createBuilding(data: BuildingCreateInput!): Building!
  createFloor(data: FloorCreateInput!): MutationResult!
  signOut: SignedOutSuccess!
  signinUser(data: UserLoginInput!): User!
  signupUser(data: UserCreateInput!): User!
}

type MutationResult {
  success: Boolean!
}

type Query {
  allBuildings: [Building!]!
  allUsers: [User!]!
  getBuilding(data: BuildingUniqueInput!): Building!
  getUserFromCookie: LogedInUser!
}

type SignedOutSuccess {
  success: Boolean!
}

type User {
  BuildingWithPerms: [BuildingWithPerms!]!
  databaseId: Float!
  email: String!
  id: ID!
  isEmailVerified: Boolean!
  name: String!
}

input UserCreateInput {
  email: String!
  name: String!
  password: String!
}

input UserLoginInput {
  email: String!
  password: String!
}